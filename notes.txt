Lesson 1-9
Intro...

Lesson 10
Docker options for Windows

Lesson 11
Docker Windows setup

Lesson 12
Docker Windows 7,8, 10 Home setup

Lesson 13
Docker Mac
Don't use homebrew to install docker 
Checkout terminal completion for docker.

Lesson 14
Docker Linux
Better to install by following instructions from docker website.
Don't use pre-install setups (install docker manually)
Don't use 'apt' to install docker, it might be too old version
`get.docker.com` - script to install docker
adding yourself to a docker group (remove sudo for every command) can be potential security issue.
docker-machine - needs to be installed manually
docker-compose - need to be installed manually

Lesson 15
- - - 

Lesson 16
- - - 

Lesson 17
- - - 

Lesson 18
`docker version` - Display info about client and server versions (check client/server status)
`docker info` - Display system-wide information

Lesson 19
Image - binaries and libs and source code that makes up an application
Container - running instance of am image
Registry is like github for docker
`docker container run --publish` `-p` - set port
`docker container run --detach` `-d` - run in a background
`docker ls` - see list of containers
`docker ls -a` - see list of containers including stopped
`docker stop` - stop a container by id
Container name must be unique
`docker container run --name` - give container a name
`docker logs` - see logs of a container
`docker logs -f` - tail logs
`docker container top` - list of processes in the container
`docker stats` - Display a live stream of container(s) resource usage statistics
`docker container rm` - removes a container
`docker container rm -f` - remove container even if it is running (stops it first)

Lesson 20
When running `docker container run`:
1. Looks in local cache for an image
2. Looks in remove repository (defaults to docker hub)
3. Downloads an image in found and stores it in local cache
4. Creates a new container of that image (starts a new layer of changes on top)
5. Give a virtual IP on private network in docker
6. Opens a port if specified
7. Start using a command specified (like entrypoint?)

Lesson 21
Containers are not mini virtual machines. They are restricted processes.
* They are processes
* Limited to what resources they can access
* Exit when process stops

Lesson 22
- - -

Lesson 23
Assignment - Running basic containers
--env -e - environment variables

Lesson 24
Assignment - Running basic containers

Lesson 25
docker container top - process list in one container
docker container inspect - details of one container config
docker container stats - performance stats for all containers

Lesson 26
docker container run -it - start a new container interactively
docker container exec -it - run addition command in existing container
docker container -ai - similar at '-it' but for start command
-i, --interactive          Keep STDIN open even if not attached (allows connection running)
-t, --tty                  Allocate a pseudo-TTY ("fake" terminal)

Lesson 27
docker container port - quick ports check
every container connect to bridge network by default
each of those networks routes out through NAT firewall (docker deamon) so your container can talk to
the internet
container can talk to each other inside same network without opening any extra ports
'--net=host' - skip virtual networks and use host IP
docker container inspect --format - filter output format eg. {{ .NetworkSetting.IPAddress }}

Lesson 28
- - -

Lesson 29
docker network ls
docker network inspect
docker network create --driver
docker network connect - attach a network to a container
docker network disconnect - detach a network from a container

Lesson 30
DNS
Docker uses container names as host names (only for custom networks)
default 'bridged' network does not have DNS by default
docker compose makes it easier in 'bridged' network too

Lesson 31
Assigment

Lesson 32
Assigment
--rm - cleans up a container after exiting

Lesson 33
- - -

Lesson 34
DNS Round Robin Test - make sure that multiple servers (containers) can respond for the same dns name
(poor man load balancer lol)
--network-alias or --net-alias to assign an alias to a container
--net= to assign to a network on container startup

Lesson 35
- - -

Lesson 36
- - -

Lesson 37
Dockerhub
docker image ls
docker image push
docker image pull
docker rmi

Lesson 38
docker image history - history about an image layers
docker image inspect - meta data

Lesson 39
Image tags
docker image tag - create a new tag for an image
docker login
docker logout
Docker login stores a token (potential security issie)

Lesson 40
-f can be provided for a file
Dockerfile
ENV - to set environment variables
RUN - runs a command
All logs can be spit to /dev/stdout and /dev/stderr so docker can capture them
EXPOSE - to open ports
CMD - final command that runs every time new container run starts or every time restarts stopped container

Lesson 41
docker image build - to build an image using dockerfile
keep things that changes the least in the beginning and things that changes the most in the end
copy stuff at the end so it build faster

Lesson 42
COPY - to copy files over to a container
WORKDIR - to change directory (same as RUN cd ...)


Lesson 43
Assignment

Lesson 44
Assignment
&& - chains commands. fails if any command fails
; - dont care is first command failed and keeps executing next
Final CSM command should have this syntax - CMD ["/sbin/tini", "--" ,"node", "./bin/www"]

Lesson 45
docker image prune (-a) - to cleanup images
docker system prune - to cleanup everything
docker system df - to see space usage
docker network prune - to cleanup networks

Lesson 46
- - -

Lesson 47
Persistent data: Volumes
Volume is a unique location on a host which is getting mounter to a container
(in Mac and win it is in virtual machine)
docker volume ls - see all volumes
docker container run -v - to create or link a named volume eg. `mysql-db:/var/lib/mysql`
docker volume create - to create a volume (can specify a driver)

Lesson 48
$(pwd) - useful command to use in a command where directory unknown

Lesson 49
Persistent data: Bind mounting
A mapping between host file directories in to container file directories
Does not overwrite a data in container. If you run a container again without mounting you will see
the data that was there before.

Lesson 50
Assignment

Lesson 51
Assignment

Lesson 52
Assigment

Lesson 53
Assigment
Jekyll - check it out! website generator





